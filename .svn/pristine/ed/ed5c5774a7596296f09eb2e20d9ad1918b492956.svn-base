#include "sc.h"
#include "symulacja.h"
#include "math.h"
#include <iostream>
#include <fstream>
#include <iomanip>
#include <string>
#include <sstream>
#include <vector>
#include "rng.h"
#include "kolejka.h"
#include "kanal.h"
#include "statek.h"
#include "zrodlo.h"
#include "port.h"
#include <cmath>

using namespace std;



int czasPrzeplyniecia(statek plynacy, kanal wybrany){ //funkcja wykorzystujaca wzor i okreslajaca czas przeplyniecia okreslonego statku przez okreslony tor

	int czas;
	czas = 9.5 + (plynacy.masa / 1000)* ( (log(plynacy.masa)/100) / log(5) ) + 5*wybrany.kt; //logx/logb = lox o podstawie b z x
	return czas;


}
	

	
void zajecieToru(kanal pierwszy, kanal drugi, kanal trzeci, kanal czwarty, statek wybrany){ //sprawdzamy ktory tor jest zajety jezeli nie jest i spelnia zanurzenie to go zajmujemy
	kanal tab[10] = { pierwszy, drugi, trzeci, czwarty };
	for (i = 0; i++; i < 4)
	{
		if 
	}

}



void utworzenieStatku(int a)
{
	int typ;
	int masa;
	int ppz;
	int zanurzenie;
	int czasOb;
	int wymaganeDzwigi;
	int wymaganeTasmociagi;
	int wymaganeRampy;
	int wymaganeProwadnice;



	switch (a)
	{
	case 1:{

			   typ = 1; //jacht
			   masa = 200 + rand() % 1801;//masa jachtu przedzial 100:2000 gl. zan. nie przekrcza 2m? 
			   ppz = 0;
			   zanurzenie = (masa / 1000);//nie wiecej niz 2m, 
			   czasOb = 0;
			   wymaganeDzwigi = 0;
			   wymaganeTasmociagi = 0;
			   wymaganeRampy = 0;
			   wymaganeProwadnice = 0;


			   break; }
	case 2:{

			   typ = 2; 
			   masa = 750 + rand() % 2251; 
			   ppz = 0.40;
			   zanurzenie = (masa / 1000); 
			   czasOb = 0;
			   wymaganeDzwigi = 0;
			   wymaganeTasmociagi = 0;
			   wymaganeRampy = 1;
			   wymaganeProwadnice = 0;
			   break; }
	case 3:{

			   typ = 3; 
			   masa = 500 + rand() % 2501;
 
			   ppz = 0.75;
			   zanurzenie = (masa / 1000);
			   czasOb = 0;
			   wymaganeDzwigi = 0;
			   wymaganeTasmociagi = 0;
			   wymaganeRampy = 2;
			   wymaganeProwadnice = 0;
			   break; }
	case 4:{

			   typ = 4; 
			   masa  = 500 + rand() % 2501;
 
			   ppz = 0.05;
			   zanurzenie = (masa / 1000); 
			   czasOb = 0;
			   wymaganeDzwigi = 1;
			   wymaganeTasmociagi = 0;
			   wymaganeRampy = 0;
			   wymaganeProwadnice = 0;
			   break; }
	case 5:{

			   typ = 5; 
			   masa = 3000 + rand() % 9001;
			   ppz = 0.02;
			   zanurzenie = (masa / 1000);
			   czasOb = 0;
			   wymaganeDzwigi = 0;
			   wymaganeTasmociagi = 0;
			   wymaganeRampy = 0;
			   wymaganeProwadnice = ceil((0.7*masa) / 6000); //na kazde rozpoczete 6000j ladunku
			   break; }
	case 6:{

			   typ = 6; 
			   masa  = 1500 + rand() % 13501;
			   ppz = 0.2;
			   zanurzenie = (masa / 1000);
			   czasOb = 0;
			   wymaganeDzwigi = 0;
			   wymaganeTasmociagi = ceil((0.7*masa) / 5000);
			   wymaganeRampy = 0;
			   wymaganeProwadnice = 0;
			   break; }
	}



}



int main()
{
	srand(time(NULL));
	int a;
	statek proba;
	a= proba.losowanieStatku();
	cout << a;

	cin >> a;
		


}