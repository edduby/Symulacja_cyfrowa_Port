/********************************************//**
* \file symulacja.h
* \brief Definicja obiektu symulacja
* \author Maciej Maciejewski
* \date   2015-04-23
***********************************************/

using namespace std;
#ifndef SIMULACJA_H
#define SIMULACJA_H
/////////////////////////////////////////////////
/*! \brief Symulacja.
*
*	Implementacja Symulacji.
*
*/

int czasGlobalny; 
void sprawdzamDostepnoscZajmuje(Port pierwszy, Kanal wybrany){

	if (pierwszy.czyMogeWplynac || (wybrany.zajetosc == 0)){




	}
	else
	{




	}

}



void Symulacja()
{
//miejsce symulacji


	//>!Stworzenie portu

	Port MojPort;
	cout << "dupa     " << MojPort.dzwigi << "dupa     ";



	//>! Sworzenie kanalow
	Kanal KanalJeden(8);
	Kanal KanalDwa(12);
	Kanal KanalTrzy(20);
	Kanal KanalCztery(25);

	//!Stworzenie kolejek
	Kolejka DoKanaluDoPortu;
	Kolejka DoKanaluZPortu;




	//!Stworzenie statku
	Statek pierwszy;

	


	cout << "pierwszy statek przeprowadzamy";
	pierwszy.dodanieStatku();
	cout << pierwszy.typ << " masa " << pierwszy.masa << "   " << pierwszy.ppz << "   " << pierwszy.wymaganeProwadnice << "  " << pierwszy.wymaganeDzwigi << "   " << pierwszy.wymaganeRampy;

	//tor zajety i kanal zajety to chce wsadzic do kolejki





	//1 stworzenie obiektow 
	//-portu
	//- kanalow
	//- statkow

	/*-Statek tworzymy okreslony statek
	+ sprawdzamy czy sa wolne narzedzia
	+ sprawdzamy czy sa wolne tory
	- jezeli nie wrzucamy go do kolejki
	- sprawdzamy czy zwolnilo sie miejsce
	- jezeli jest wiecej statkow to jezeeli nie ma wystarczajaco duzo narzedzi sprawdzamy inne statki(wybieramy statek ktory->wsp masa i ...)
	- jezeli moze sa narzedzial wplywamy i zajmujemu tor oraz narzedzia(tor ktory wybiuerzemy mamy wybrac jak najlepiej tzn.pod wzgledem masy i szybkosci kt)

	- zostajemy obslugiwani
	- sprawdzamy czy tory sa wolne zeby wrocic jezeli nie zajmujemy kolejke.

	*/
	srand(time(NULL));
	int a;
	Statek proba;
	a = proba.losowanieStatku();
	cout << a;
	cin >> a;





}


/////////////////////////////////////////////////
//***********************************************
#endif /*SYMULACJA_H*/  